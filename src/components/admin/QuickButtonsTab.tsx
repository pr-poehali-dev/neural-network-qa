import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

interface QuickButton {
  id: string;
  text: string;
  emoji: string;
  enabled: boolean;
}

const defaultButtons: QuickButton[] = [
  { id: '1', text: '–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?', emoji: 'üí∞', enabled: true },
  { id: '2', text: '–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å?', emoji: 'üõí', enabled: true },
  { id: '3', text: '–ö–æ–Ω—Ç–∞–∫—Ç—ã', emoji: 'üìû', enabled: true },
  { id: '4', text: '–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã', emoji: '‚è∞', enabled: true },
  { id: '5', text: '–£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏', emoji: 'üöö', enabled: false },
  { id: '6', text: '–ì–∞—Ä–∞–Ω—Ç–∏—è', emoji: '‚úÖ', enabled: false },
];

export default function QuickButtonsTab() {
  const [buttons, setButtons] = useState<QuickButton[]>(() => {
    const saved = localStorage.getItem('quick_buttons');
    return saved ? JSON.parse(saved) : defaultButtons;
  });
  const [newButton, setNewButton] = useState({ text: '', emoji: 'üí°' });
  const { toast } = useToast();

  const saveButtons = (updatedButtons: QuickButton[]) => {
    setButtons(updatedButtons);
    localStorage.setItem('quick_buttons', JSON.stringify(updatedButtons));
    toast({ title: '–ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã' });
  };

  const addButton = () => {
    if (!newButton.text.trim()) {
      toast({ title: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏', variant: 'destructive' });
      return;
    }
    const newBtn: QuickButton = {
      id: Date.now().toString(),
      text: newButton.text,
      emoji: newButton.emoji,
      enabled: true
    };
    saveButtons([...buttons, newBtn]);
    setNewButton({ text: '', emoji: 'üí°' });
  };

  const toggleButton = (id: string) => {
    saveButtons(buttons.map(btn => 
      btn.id === id ? { ...btn, enabled: !btn.enabled } : btn
    ));
  };

  const deleteButton = (id: string) => {
    saveButtons(buttons.filter(btn => btn.id !== id));
  };

  const emojiList = ['üí∞', 'üõí', 'üìû', '‚è∞', 'üöö', '‚úÖ', '‚ùì', 'üìß', 'üè†', '‚≠ê', 'üéØ', 'üìù', 'üî•', 'üí°', 'üéâ', 'üëç'];

  return (
    <div className="space-y-6">
      <Card className="p-6 dark:bg-gray-800 border-purple-200 dark:border-purple-700">
        <h3 className="text-lg font-semibold mb-4 flex items-center gap-2 text-gray-900 dark:text-white">
          <Icon name="Zap" size={20} className="text-purple-600" />
          –ë—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏
        </h3>
        <p className="text-sm text-gray-600 dark:text-gray-400 mb-4">
          –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–Ω–æ–ø–∫–∏ —Å —á–∞—Å—Ç—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç –Ω–∞–∂–∏–º–∞—Ç—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        </p>

        <div className="space-y-3 mb-6">
          {buttons.map((btn) => (
            <div key={btn.id} className="flex items-center gap-3 p-3 bg-gray-50 dark:bg-gray-900 rounded-lg">
              <span className="text-2xl">{btn.emoji}</span>
              <span className="flex-1 text-gray-900 dark:text-white">{btn.text}</span>
              <Button
                variant={btn.enabled ? "default" : "outline"}
                size="sm"
                onClick={() => toggleButton(btn.id)}
                className={btn.enabled ? "bg-green-600 hover:bg-green-700" : ""}
              >
                {btn.enabled ? <Icon name="Eye" size={16} /> : <Icon name="EyeOff" size={16} />}
              </Button>
              <Button
                variant="ghost"
                size="sm"
                onClick={() => deleteButton(btn.id)}
                className="text-red-600 hover:text-red-700 hover:bg-red-50 dark:hover:bg-red-900/20"
              >
                <Icon name="Trash2" size={16} />
              </Button>
            </div>
          ))}
        </div>

        <div className="border-t border-gray-200 dark:border-gray-700 pt-4">
          <h4 className="text-sm font-semibold mb-3 text-gray-900 dark:text-white">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É</h4>
          <div className="flex gap-2 mb-3">
            <div className="flex gap-2 flex-wrap">
              {emojiList.map((emoji) => (
                <button
                  key={emoji}
                  onClick={() => setNewButton({ ...newButton, emoji })}
                  className={`text-2xl p-2 rounded-lg transition-all ${
                    newButton.emoji === emoji 
                      ? 'bg-purple-100 dark:bg-purple-900 ring-2 ring-purple-500' 
                      : 'hover:bg-gray-100 dark:hover:bg-gray-800'
                  }`}
                >
                  {emoji}
                </button>
              ))}
            </div>
          </div>
          <div className="flex gap-2">
            <Input
              placeholder="–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?)"
              value={newButton.text}
              onChange={(e) => setNewButton({ ...newButton, text: e.target.value })}
              onKeyDown={(e) => e.key === 'Enter' && addButton()}
              className="dark:bg-gray-900 dark:text-white dark:border-gray-700"
            />
            <Button onClick={addButton} className="bg-purple-600 hover:bg-purple-700">
              <Icon name="Plus" size={18} className="mr-2" />
              –î–æ–±–∞–≤–∏—Ç—å
            </Button>
          </div>
        </div>
      </Card>

      <Card className="p-6 dark:bg-gray-800 border-blue-200 dark:border-blue-700">
        <h3 className="text-lg font-semibold mb-3 flex items-center gap-2 text-gray-900 dark:text-white">
          <Icon name="Info" size={20} className="text-blue-600" />
          –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
        </h3>
        <ul className="space-y-2 text-sm text-gray-600 dark:text-gray-400">
          <li className="flex items-start gap-2">
            <span className="text-green-600 mt-0.5">‚úì</span>
            <span>–ö–Ω–æ–ø–∫–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø–æ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ –≤ —á–∞—Ç–µ</span>
          </li>
          <li className="flex items-start gap-2">
            <span className="text-green-600 mt-0.5">‚úì</span>
            <span>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–ª–∏–∫–∞–µ—Ç ‚Üí –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</span>
          </li>
          <li className="flex items-start gap-2">
            <span className="text-green-600 mt-0.5">‚úì</span>
            <span>–ú–æ–∂–Ω–æ –≤–∫–ª—é—á–∞—Ç—å/–≤—ã–∫–ª—é—á–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è</span>
          </li>
          <li className="flex items-start gap-2">
            <span className="text-green-600 mt-0.5">‚úì</span>
            <span>–í—ã–±–∏—Ä–∞–π—Ç–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</span>
          </li>
        </ul>
      </Card>
    </div>
  );
}
