import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

export default function SecurityTab() {
  const [currentPassword, setCurrentPassword] = useState('');
  const [newPassword, setNewPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const { toast } = useToast();

  const handleChangePassword = () => {
    const savedPassword = localStorage.getItem('admin_password') || 'admin123';
    
    if (currentPassword !== savedPassword) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–µ–Ω',
        variant: 'destructive'
      });
      return;
    }

    if (newPassword.length < 6) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤',
        variant: 'destructive'
      });
      return;
    }

    if (newPassword !== confirmPassword) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç',
        variant: 'destructive'
      });
      return;
    }

    localStorage.setItem('admin_password', newPassword);
    setCurrentPassword('');
    setNewPassword('');
    setConfirmPassword('');
    
    toast({
      title: '–ü–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω—ë–Ω',
      description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤—Ö–æ–¥–µ'
    });
  };

  const currentPasswordStored = localStorage.getItem('admin_password') || 'admin123';

  return (
    <div className="space-y-6">
      <div>
        <h2 className="text-3xl font-bold text-white mb-2">üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h2>
        <p className="text-purple-300">–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–∞—Ä–æ–ª—è–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <Card className="p-6 bg-white/5 border border-white/10 backdrop-blur-sm">
          <div className="flex items-center gap-3 mb-6">
            <div className="w-12 h-12 rounded-2xl bg-gradient-to-br from-purple-600 to-pink-600 flex items-center justify-center shadow-lg shadow-purple-500/50">
              <Icon name="Key" className="text-white" size={24} />
            </div>
            <h3 className="text-xl font-bold text-white">–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è</h3>
          </div>

          <div className="space-y-4">
            <div>
              <label className="text-purple-200 text-sm mb-2 block">–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å</label>
              <div className="relative">
                <Icon name="Lock" className="absolute left-3 top-1/2 -translate-y-1/2 text-purple-400" size={18} />
                <Input
                  type={showPassword ? 'text' : 'password'}
                  value={currentPassword}
                  onChange={(e) => setCurrentPassword(e.target.value)}
                  className="pl-10 bg-white/10 border-purple-500/30 text-white placeholder:text-purple-300"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å"
                />
              </div>
            </div>

            <div>
              <label className="text-purple-200 text-sm mb-2 block">–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</label>
              <div className="relative">
                <Icon name="Lock" className="absolute left-3 top-1/2 -translate-y-1/2 text-purple-400" size={18} />
                <Input
                  type={showPassword ? 'text' : 'password'}
                  value={newPassword}
                  onChange={(e) => setNewPassword(e.target.value)}
                  className="pl-10 bg-white/10 border-purple-500/30 text-white placeholder:text-purple-300"
                  placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤"
                />
              </div>
            </div>

            <div>
              <label className="text-purple-200 text-sm mb-2 block">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
              <div className="relative">
                <Icon name="Lock" className="absolute left-3 top-1/2 -translate-y-1/2 text-purple-400" size={18} />
                <Input
                  type={showPassword ? 'text' : 'password'}
                  value={confirmPassword}
                  onChange={(e) => setConfirmPassword(e.target.value)}
                  className="pl-10 bg-white/10 border-purple-500/30 text-white placeholder:text-purple-300"
                  placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"
                />
              </div>
            </div>

            <button
              onClick={() => setShowPassword(!showPassword)}
              className="text-purple-300 hover:text-white text-sm flex items-center gap-2 transition-colors"
            >
              <Icon name={showPassword ? 'EyeOff' : 'Eye'} size={16} />
              {showPassword ? '–°–∫—Ä—ã—Ç—å –ø–∞—Ä–æ–ª–∏' : '–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª–∏'}
            </button>

            <Button
              onClick={handleChangePassword}
              className="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white shadow-lg shadow-purple-500/50"
            >
              <Icon name="Check" className="mr-2" size={18} />
              –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
            </Button>
          </div>
        </Card>

        <Card className="p-6 bg-white/5 border border-white/10 backdrop-blur-sm">
          <div className="flex items-center gap-3 mb-6">
            <div className="w-12 h-12 rounded-2xl bg-gradient-to-br from-blue-600 to-cyan-600 flex items-center justify-center shadow-lg shadow-blue-500/50">
              <Icon name="Shield" className="text-white" size={24} />
            </div>
            <h3 className="text-xl font-bold text-white">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h3>
          </div>

          <div className="space-y-4">
            <div className="p-4 rounded-xl bg-gradient-to-r from-green-500/20 to-emerald-500/20 border border-green-500/30">
              <div className="flex items-center gap-3 mb-2">
                <Icon name="CheckCircle" className="text-green-400" size={20} />
                <span className="text-white font-semibold">–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</span>
              </div>
              <p className="text-purple-200 text-sm">
                –ü–∞—Ä–æ–ª—å: <code className="bg-white/10 px-2 py-1 rounded">{showPassword ? currentPasswordStored : '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢'}</code>
              </p>
            </div>

            <div className="space-y-3">
              <h4 className="text-white font-semibold flex items-center gap-2">
                <Icon name="Info" className="text-purple-400" size={18} />
                –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
              </h4>
              <ul className="space-y-2 text-purple-200 text-sm">
                <li className="flex items-start gap-2">
                  <Icon name="Check" className="text-green-400 mt-0.5" size={16} />
                  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤
                </li>
                <li className="flex items-start gap-2">
                  <Icon name="Check" className="text-green-400 mt-0.5" size={16} />
                  –ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã
                </li>
                <li className="flex items-start gap-2">
                  <Icon name="Check" className="text-green-400 mt-0.5" size={16} />
                  –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ –ø–∞—Ä–æ–ª–∏
                </li>
                <li className="flex items-start gap-2">
                  <Icon name="Check" className="text-green-400 mt-0.5" size={16} />
                  –ú–µ–Ω—è–π—Ç–µ –ø–∞—Ä–æ–ª—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ
                </li>
              </ul>
            </div>

            <div className="p-4 rounded-xl bg-yellow-500/10 border border-yellow-500/30">
              <div className="flex items-start gap-3">
                <Icon name="AlertTriangle" className="text-yellow-400 mt-0.5" size={20} />
                <div>
                  <p className="text-white font-semibold mb-1">–í–∞–∂–Ω–æ!</p>
                  <p className="text-yellow-200 text-sm">
                    –ù–µ –¥–µ–ª–∏—Ç–µ—Å—å –ø–∞—Ä–æ–ª–µ–º —Å —Ç—Ä–µ—Ç—å–∏–º–∏ –ª–∏—Ü–∞–º–∏. –ü–∞—Ä–æ–ª—å —Ö—Ä–∞–Ω–∏—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ.
                  </p>
                </div>
              </div>
            </div>
          </div>
        </Card>
      </div>

      <Card className="p-6 bg-gradient-to-r from-red-600/20 to-orange-600/20 border border-red-500/30 backdrop-blur-sm">
        <div className="flex items-start gap-4">
          <div className="w-12 h-12 rounded-2xl bg-gradient-to-br from-red-600 to-orange-600 flex items-center justify-center flex-shrink-0 shadow-lg shadow-red-500/50">
            <Icon name="AlertCircle" className="text-white" size={24} />
          </div>
          <div>
            <h3 className="text-xl font-bold text-white mb-2">‚ö†Ô∏è –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è</h3>
            <p className="text-red-200 mb-4">
              –ï—Å–ª–∏ –≤—ã –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å, —É–¥–∞–ª–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage –±—Ä–∞—É–∑–µ—Ä–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.
            </p>
            <Button
              variant="outline"
              onClick={() => {
                if (confirm('–°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å –¥–æ "admin123"?')) {
                  localStorage.removeItem('admin_password');
                  toast({
                    title: '–ü–∞—Ä–æ–ª—å —Å–±—Ä–æ—à–µ–Ω',
                    description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "admin123" –¥–ª—è –≤—Ö–æ–¥–∞'
                  });
                }
              }}
              className="border-red-500/50 text-red-300 hover:bg-red-500/20 hover:text-white"
            >
              <Icon name="RotateCcw" className="mr-2" size={18} />
              –°–±—Ä–æ—Å–∏—Ç—å –¥–æ admin123
            </Button>
          </div>
        </div>
      </Card>
    </div>
  );
}
