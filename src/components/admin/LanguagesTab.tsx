import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import { useTranslation } from '@/hooks/useTranslation';
import { Language } from '@/i18n/translations';
import { useToast } from '@/hooks/use-toast';

export default function LanguagesTab() {
  const { t, language, setLanguage } = useTranslation();
  const { toast } = useToast();

  const languages: { code: Language; flag: string; name: string; nativeName: string }[] = [
    { code: 'ru', flag: 'üá∑üá∫', name: 'Russian', nativeName: '–†—É—Å—Å–∫–∏–π' },
    { code: 'en', flag: 'üá¨üáß', name: 'English', nativeName: 'English' },
    { code: 'es', flag: 'üá™üá∏', name: 'Spanish', nativeName: 'Espa√±ol' },
    { code: 'de', flag: 'üá©üá™', name: 'German', nativeName: 'Deutsch' },
    { code: 'fr', flag: 'üá´üá∑', name: 'French', nativeName: 'Fran√ßais' },
    { code: 'zh', flag: 'üá®üá≥', name: 'Chinese', nativeName: '‰∏≠Êñá' }
  ];

  const handleSetLanguage = (code: Language) => {
    setLanguage(code);
    toast({
      title: '‚úì –Ø–∑—ã–∫ –∏–∑–º–µ–Ω—ë–Ω',
      description: `–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–µ—Ä–µ–∫–ª—é—á—ë–Ω –Ω–∞: ${languages.find(l => l.code === code)?.nativeName}`
    });
  };

  const currentLang = languages.find(l => l.code === language);

  return (
    <div className="space-y-6">
      <div>
        <h2 className="text-2xl font-bold text-white mb-2">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞–º–∏</h2>
        <p className="text-gray-400">
          –ü–µ—Ä–µ–∫–ª—é—á–∞–π—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞. –í—Å–µ —Ç–µ–∫—Å—Ç—ã —Å–∞–π—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–æ–¥—è—Ç—Å—è.
        </p>
      </div>

      <Card className="bg-gradient-to-br from-indigo-500/20 to-purple-500/20 border-indigo-400/30 p-6">
        <div className="flex items-center gap-4 mb-4">
          <div className="w-16 h-16 bg-gradient-to-br from-indigo-600 to-purple-600 rounded-xl flex items-center justify-center text-3xl">
            {currentLang?.flag}
          </div>
          <div>
            <h3 className="text-xl font-bold text-white">–¢–µ–∫—É—â–∏–π —è–∑—ã–∫</h3>
            <p className="text-lg text-indigo-300">{currentLang?.nativeName} ({currentLang?.name})</p>
          </div>
        </div>
        <div className="flex items-start gap-2 bg-white/10 rounded-lg p-4">
          <Icon name="Info" className="text-blue-400 mt-0.5" size={18} />
          <p className="text-sm text-gray-300">
            –Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º —Å–∞–π—Ç–∞: 
            –Ω–∞–≤–∏–≥–∞—Ü–∏—è, –∫–Ω–æ–ø–∫–∏, —á–∞—Ç, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —Ñ–æ—Ä–º—ã.
          </p>
        </div>
      </Card>

      <div>
        <h3 className="text-lg font-semibold text-white mb-4">–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {languages.map((lang) => {
            const isActive = language === lang.code;
            return (
              <Card
                key={lang.code}
                className={`relative overflow-hidden transition-all duration-300 cursor-pointer ${
                  isActive
                    ? 'bg-gradient-to-br from-indigo-600/40 to-purple-600/40 border-indigo-400 scale-105 shadow-xl'
                    : 'bg-gray-800/50 border-gray-700 hover:border-gray-600 hover:bg-gray-800/70 hover:scale-102'
                }`}
                onClick={() => handleSetLanguage(lang.code)}
              >
                {isActive && (
                  <div className="absolute top-2 right-2 bg-green-500 text-white text-xs px-2 py-1 rounded-full flex items-center gap-1">
                    <Icon name="Check" size={12} />
                    –ê–∫—Ç–∏–≤–µ–Ω
                  </div>
                )}
                
                <div className="p-6">
                  <div className="text-6xl mb-4 text-center">{lang.flag}</div>
                  <h4 className="text-xl font-bold text-white text-center mb-1">
                    {lang.nativeName}
                  </h4>
                  <p className="text-sm text-gray-400 text-center">{lang.name}</p>
                  
                  {isActive ? (
                    <div className="mt-4 py-2 px-4 bg-green-500/20 text-green-300 rounded-lg text-center text-sm font-medium">
                      –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ–π—á–∞—Å
                    </div>
                  ) : (
                    <Button 
                      className="w-full mt-4 bg-indigo-600 hover:bg-indigo-700"
                      size="sm"
                      onClick={(e) => {
                        e.stopPropagation();
                        handleSetLanguage(lang.code);
                      }}
                    >
                      –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                    </Button>
                  )}
                </div>
              </Card>
            );
          })}
        </div>
      </div>

      <Card className="bg-gray-800/50 border-gray-700 p-6">
        <h3 className="text-lg font-semibold text-white mb-4 flex items-center gap-2">
          <Icon name="Globe" size={20} className="text-indigo-400" />
          –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        </h3>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          <div className="bg-gray-700/50 rounded-lg p-4">
            <div className="text-3xl font-bold text-indigo-400 mb-1">6</div>
            <div className="text-sm text-gray-400">–Ø–∑—ã–∫–æ–≤</div>
          </div>
          <div className="bg-gray-700/50 rounded-lg p-4">
            <div className="text-3xl font-bold text-purple-400 mb-1">100+</div>
            <div className="text-sm text-gray-400">–°—Ç—Ä–æ–∫</div>
          </div>
          <div className="bg-gray-700/50 rounded-lg p-4">
            <div className="text-3xl font-bold text-pink-400 mb-1">100%</div>
            <div className="text-sm text-gray-400">–û—Ö–≤–∞—Ç</div>
          </div>
          <div className="bg-gray-700/50 rounded-lg p-4">
            <div className="text-3xl font-bold text-green-400 mb-1">‚úì</div>
            <div className="text-sm text-gray-400">–ö–∞—á–µ—Å—Ç–≤–æ</div>
          </div>
        </div>
      </Card>

      <Card className="bg-blue-500/10 border-blue-400/30 p-6">
        <div className="flex items-start gap-3">
          <Icon name="Lightbulb" className="text-blue-400 mt-1" size={24} />
          <div>
            <h4 className="text-white font-semibold mb-2">–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å</h4>
            <ul className="space-y-2 text-sm text-gray-300">
              <li className="flex items-start gap-2">
                <span className="text-blue-400 mt-1">‚Ä¢</span>
                <span>–í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–µ—Ä–µ–≤–æ–¥—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞</span>
              </li>
              <li className="flex items-start gap-2">
                <span className="text-blue-400 mt-1">‚Ä¢</span>
                <span>–í—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</span>
              </li>
              <li className="flex items-start gap-2">
                <span className="text-blue-400 mt-1">‚Ä¢</span>
                <span>–ü–µ—Ä–µ–≤–æ–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞</span>
              </li>
              <li className="flex items-start gap-2">
                <span className="text-blue-400 mt-1">‚Ä¢</span>
                <span>–°–∏—Å—Ç–µ–º–∞ i18n —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤</span>
              </li>
            </ul>
          </div>
        </div>
      </Card>

      <div className="flex gap-3">
        <Button 
          onClick={() => {
            setLanguage('ru');
            toast({ title: '‚úì –Ø–∑—ã–∫ —Å–±—Ä–æ—à–µ–Ω', description: '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é' });
          }}
          variant="outline"
          className="bg-gray-700/50 border-gray-600 text-white hover:bg-gray-700"
        >
          <Icon name="RotateCcw" size={18} className="mr-2" />
          –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–∏–π
        </Button>
        
        <Button 
          onClick={() => {
            const nextLangIndex = (languages.findIndex(l => l.code === language) + 1) % languages.length;
            handleSetLanguage(languages[nextLangIndex].code);
          }}
          variant="outline"
          className="bg-indigo-600/20 border-indigo-500/30 text-indigo-300 hover:bg-indigo-600/30"
        >
          <Icon name="ArrowRight" size={18} className="mr-2" />
          –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π
        </Button>
      </div>
    </div>
  );
}
