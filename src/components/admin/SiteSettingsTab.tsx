import { Card } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Button } from '@/components/ui/button';
import { Label } from '@/components/ui/label';
import { Switch } from '@/components/ui/switch';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

interface SiteSettings {
  title: string;
  subtitle: string;
  primaryColor: string;
  secondaryColor: string;
  logo: string;
  footerText: string;
  welcomeMessage: string;
  enableChat: boolean;
  enableVoice: boolean;
  maxFileSize: string;
  allowedTypes: string;
  whatsappNumber?: string;
  telegramUsername?: string;
  telegramBotId?: string;
  telegramAdminChatId?: string;
  openrouterApiKey?: string;
  aiModel?: string;
  enableAiChat?: boolean;
}

interface SiteSettingsTabProps {
  settings: SiteSettings;
  onUpdateSettings: (settings: SiteSettings) => void;
}

export default function SiteSettingsTab({ settings, onUpdateSettings }: SiteSettingsTabProps) {
  const { toast } = useToast();

  const saveSiteSettings = () => {
    localStorage.setItem('site_settings', JSON.stringify(settings));
    document.documentElement.style.setProperty('--primary-color', settings.primaryColor);
    document.documentElement.style.setProperty('--secondary-color', settings.secondaryColor);
    toast({ title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã' });
  };

  return (
    <Card className="p-8 border-2 border-purple-200">
      <h2 className="text-2xl font-bold text-gray-900 mb-6">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞</h2>
      
      <div className="space-y-6">
        <div className="grid md:grid-cols-2 gap-6">
          <div>
            <Label className="mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞</Label>
            <Input
              value={settings.title}
              onChange={(e) => onUpdateSettings({ ...settings, title: e.target.value })}
              className="border-purple-200"
            />
          </div>

          <div>
            <Label className="mb-2">–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫</Label>
            <Input
              value={settings.subtitle}
              onChange={(e) => onUpdateSettings({ ...settings, subtitle: e.target.value })}
              className="border-purple-200"
            />
          </div>
        </div>

        <div className="grid md:grid-cols-2 gap-6">
          <div>
            <Label className="mb-2">–û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç</Label>
            <div className="flex gap-2">
              <Input
                type="color"
                value={settings.primaryColor}
                onChange={(e) => onUpdateSettings({ ...settings, primaryColor: e.target.value })}
                className="w-20 h-10 border-purple-200"
              />
              <Input
                value={settings.primaryColor}
                onChange={(e) => onUpdateSettings({ ...settings, primaryColor: e.target.value })}
                className="flex-1 border-purple-200"
              />
            </div>
          </div>

          <div>
            <Label className="mb-2">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ü–≤–µ—Ç</Label>
            <div className="flex gap-2">
              <Input
                type="color"
                value={settings.secondaryColor}
                onChange={(e) => onUpdateSettings({ ...settings, secondaryColor: e.target.value })}
                className="w-20 h-10 border-purple-200"
              />
              <Input
                value={settings.secondaryColor}
                onChange={(e) => onUpdateSettings({ ...settings, secondaryColor: e.target.value })}
                className="flex-1 border-purple-200"
              />
            </div>
          </div>
        </div>

        <div>
          <Label className="mb-2">–¢–µ–∫—Å—Ç –≤ –ø–æ–¥–≤–∞–ª–µ</Label>
          <Input
            value={settings.footerText}
            onChange={(e) => onUpdateSettings({ ...settings, footerText: e.target.value })}
            className="border-purple-200"
          />
        </div>

        <div>
          <Label className="mb-2">–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</Label>
          <Textarea
            value={settings.welcomeMessage}
            onChange={(e) => onUpdateSettings({ ...settings, welcomeMessage: e.target.value })}
            className="border-purple-200 min-h-[100px]"
            placeholder="–ü—Ä–∏–≤–µ—Ç! üëã –Ø –ø–æ–º–æ—â–Ω–∏–∫..."
          />
          <p className="text-xs text-gray-500 mt-1">
            –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–≤–∏–¥—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞
          </p>
        </div>

        <div className="grid md:grid-cols-2 gap-6">
          <div className="flex items-center justify-between p-4 border border-purple-200 rounded-lg">
            <Label>–í–∫–ª—é—á–∏—Ç—å —á–∞—Ç</Label>
            <Switch
              checked={settings.enableChat}
              onCheckedChange={(checked) => onUpdateSettings({ ...settings, enableChat: checked })}
            />
          </div>

          <div className="flex items-center justify-between p-4 border border-purple-200 rounded-lg">
            <Label>–í–∫–ª—é—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞</Label>
            <Switch
              checked={settings.enableVoice}
              onCheckedChange={(checked) => onUpdateSettings({ ...settings, enableVoice: checked })}
            />
          </div>
        </div>

        <div className="grid md:grid-cols-2 gap-6">
          <div>
            <Label className="mb-2">–ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (MB)</Label>
            <Input
              type="number"
              value={settings.maxFileSize}
              onChange={(e) => onUpdateSettings({ ...settings, maxFileSize: e.target.value })}
              className="border-purple-200"
            />
          </div>

          <div>
            <Label className="mb-2">–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤</Label>
            <Input
              value={settings.allowedTypes}
              onChange={(e) => onUpdateSettings({ ...settings, allowedTypes: e.target.value })}
              className="border-purple-200"
              placeholder=".txt,.pdf,.doc"
            />
          </div>
        </div>

        <div className="grid md:grid-cols-2 gap-6">
          <div>
            <Label className="mb-2">WhatsApp (–Ω–æ–º–µ—Ä —Å –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã)</Label>
            <Input
              value={settings.whatsappNumber || ''}
              onChange={(e) => onUpdateSettings({ ...settings, whatsappNumber: e.target.value })}
              className="border-purple-200"
              placeholder="79991234567"
            />
            <p className="text-xs text-gray-500 mt-1">–ü—Ä–∏–º–µ—Ä: 79991234567 (–±–µ–∑ + –∏ –ø—Ä–æ–±–µ–ª–æ–≤)</p>
          </div>

          <div>
            <Label className="mb-2">Telegram (username)</Label>
            <Input
              value={settings.telegramUsername || ''}
              onChange={(e) => onUpdateSettings({ ...settings, telegramUsername: e.target.value })}
              className="border-purple-200"
              placeholder="@username –∏–ª–∏ username"
            />
            <p className="text-xs text-gray-500 mt-1">–ü–æ—è–≤–∏—Ç—Å—è –ø–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞ —Å–ø—Ä–∞–≤–∞ –≤–Ω–∏–∑—É</p>
          </div>
        </div>

        <div className="grid md:grid-cols-2 gap-6">
          <div>
            <Label className="mb-2">Telegram Bot ID (–¥–ª—è –∂–∏–≤–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞)</Label>
            <Input
              value={settings.telegramBotId || ''}
              onChange={(e) => onUpdateSettings({ ...settings, telegramBotId: e.target.value })}
              className="border-purple-200"
              placeholder="123456789:ABCdefGHIjklMNOpqrsTUVwxyz"
            />
            <p className="text-xs text-gray-500 mt-1">–ü–æ–ª—É—á–∏—Ç–µ —É @BotFather –≤ Telegram</p>
          </div>

          <div>
            <Label className="mb-2">Telegram Admin Chat ID</Label>
            <Input
              value={settings.telegramAdminChatId || ''}
              onChange={(e) => onUpdateSettings({ ...settings, telegramAdminChatId: e.target.value })}
              className="border-purple-200"
              placeholder="123456789"
            />
            <p className="text-xs text-gray-500 mt-1">–ù–∞–ø–∏—à–∏—Ç–µ /start –±–æ—Ç—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å ID</p>
          </div>
        </div>

        <div className="border-t border-purple-200 pt-6 mt-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
            <Icon name="Bot" size={20} className="text-purple-600" />
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ AI —á–∞—Ç-–±–æ—Ç–∞
          </h3>
          
          <div className="space-y-4">
            <div className="flex items-center justify-between p-4 border border-purple-200 rounded-lg">
              <div>
                <Label>–í–∫–ª—é—á–∏—Ç—å AI —á–∞—Ç</Label>
                <p className="text-xs text-gray-500 mt-1">–ü–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞</p>
              </div>
              <Switch
                checked={settings.enableAiChat || false}
                onCheckedChange={(checked) => onUpdateSettings({ ...settings, enableAiChat: checked })}
              />
            </div>

            <div>
              <Label className="mb-2">OpenRouter API Key</Label>
              <Input
                type="password"
                value={settings.openrouterApiKey || ''}
                onChange={(e) => onUpdateSettings({ ...settings, openrouterApiKey: e.target.value })}
                className="border-purple-200"
                placeholder="sk-or-v1-..."
              />
              <div className="mt-2 p-3 bg-blue-50 border border-blue-200 rounded-md">
                <p className="text-xs font-medium text-blue-900 mb-1">
                  üéÅ –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø:
                </p>
                <ol className="text-xs text-blue-800 space-y-1 ml-4 list-decimal">
                  <li>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ <a href="https://openrouter.ai/keys" target="_blank" rel="noopener noreferrer" className="underline font-medium">openrouter.ai</a></li>
                  <li>–°–æ–∑–¥–∞–π—Ç–µ API –∫–ª—é—á (Credits ‚Üí Create Key)</li>
                  <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞</li>
                  <li>–í—ã–±–µ—Ä–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –º–æ–¥–µ–ª—å –Ω–∏–∂–µ ‚¨áÔ∏è</li>
                </ol>
              </div>
              <p className="text-xs text-gray-500 mt-2">
                <a 
                  href="/ai-test" 
                  target="_blank"
                  className="text-green-600 hover:underline font-medium"
                >
                  üß™ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å AI –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                </a>
              </p>
            </div>

            <div>
              <Label className="mb-2">Google Gemini API Key (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</Label>
              <Input
                type="password"
                value={settings.geminiApiKey || ''}
                onChange={(e) => onUpdateSettings({ ...settings, geminiApiKey: e.target.value })}
                className="border-purple-200"
                placeholder="AIzaSy..."
              />
              <div className="mt-2 p-3 bg-green-50 border border-green-200 rounded-md">
                <p className="text-xs font-medium text-green-900 mb-1">
                  üöÄ –†–µ–∑–µ—Ä–≤–Ω—ã–π API –∫–ª—é—á –¥–ª—è Google Gemini:
                </p>
                <ol className="text-xs text-green-800 space-y-1 ml-4 list-decimal">
                  <li>–û—Ç–∫—Ä–æ–π—Ç–µ <a href="https://aistudio.google.com/apikey" target="_blank" rel="noopener noreferrer" className="underline font-medium">Google AI Studio</a></li>
                  <li>–ù–∞–∂–º–∏—Ç–µ "Create API Key"</li>
                  <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞</li>
                  <li>–ü—Ä–∏ –æ—à–∏–±–∫–µ 429 —á–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—Å—è –Ω–∞ Gemini</li>
                </ol>
              </div>
              <p className="text-xs text-gray-500 mt-2">
                üí° <strong>–ó–∞—á–µ–º?</strong> –ï—Å–ª–∏ OpenRouter –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É –ª–∏–º–∏—Ç–∞ (429), —á–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—Å—è –Ω–∞ –ø—Ä—è–º–æ–π API Google Gemini
              </p>
            </div>

            <div>
              <Label className="mb-2">–ú–æ–¥–µ–ª—å AI</Label>
              <select
                value={settings.aiModel || 'google/gemini-2.0-flash-exp:free'}
                onChange={(e) => onUpdateSettings({ ...settings, aiModel: e.target.value })}
                className="w-full border border-purple-200 rounded-md p-2 bg-white dark:bg-gray-800 dark:text-white"
              >
                <optgroup label="üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏ (–Ω–∞–≤—Å–µ–≥–¥–∞!)">
                  <option value="google/gemini-2.0-flash-exp:free">Google Gemini 2.0 Flash (–±–µ—Å–ø–ª–∞—Ç–Ω–æ, –±—ã—Å—Ç—Ä–æ) ‚≠ê</option>
                  <option value="meta-llama/llama-3.3-70b-instruct:free">Meta Llama 3.3 70B Instruct (–±–µ—Å–ø–ª–∞—Ç–Ω–æ, –º–æ—â–Ω–µ–µ) üî•</option>
                  <option value="meta-llama/llama-3.1-8b-instruct:free">Meta Llama 3.1 8B (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)</option>
                  <option value="meta-llama/llama-3.1-70b-instruct:free">Meta Llama 3.1 70B (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)</option>
                  <option value="microsoft/phi-3-medium-128k-instruct:free">Microsoft Phi-3 (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)</option>
                </optgroup>
                <optgroup label="üí∞ –û—á–µ–Ω—å –¥–µ—à—ë–≤—ã–µ ($0.14/1M)">
                  <option value="deepseek/deepseek-chat">DeepSeek Chat (–¥–µ—à–µ–≤–ª–µ –≤—Å–µ—Ö)</option>
                  <option value="deepseek/deepseek-coder">DeepSeek Coder (–¥–ª—è –∫–æ–¥–∞)</option>
                </optgroup>
                <optgroup label="OpenAI">
                  <option value="openai/gpt-3.5-turbo">GPT-3.5 Turbo</option>
                  <option value="openai/gpt-4">GPT-4</option>
                  <option value="openai/gpt-4-turbo">GPT-4 Turbo</option>
                </optgroup>
                <optgroup label="Anthropic">
                  <option value="anthropic/claude-3-haiku">Claude 3 Haiku</option>
                  <option value="anthropic/claude-3-sonnet">Claude 3 Sonnet</option>
                  <option value="anthropic/claude-3-opus">Claude 3 Opus</option>
                </optgroup>
                <optgroup label="Google">
                  <option value="google/gemini-pro">Gemini Pro</option>
                  <option value="google/gemini-pro-1.5">Gemini Pro 1.5</option>
                </optgroup>
              </select>
              <p className="text-xs text-gray-500 mt-1">
                üéÅ = –±–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞ | üí∞ = –ø–æ—á—Ç–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ ($0.21 –∑–∞ 1000 —Å–æ–æ–±—â–µ–Ω–∏–π)
              </p>
            </div>
          </div>
        </div>

        <Button 
          onClick={saveSiteSettings}
          className="bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700"
        >
          <Icon name="Save" className="mr-2" size={18} />
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        </Button>
      </div>
    </Card>
  );
}